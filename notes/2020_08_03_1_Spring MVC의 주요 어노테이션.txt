Spring MVC의 주요 어노테이션
	@Controller
		- 컨트롤러 역할을 수행하는 객체임을 나타내는 어노테이션이다.
	@RequestMapping
		- 요청 URI와 컨트롤러 혹은 요청 URI와 요청 핸들러 메소드를 매핑시킨다.
		- 클래스와 메소드에 각각 부착할 수 있다.
		- 클래스에 부착할 경우, 부착된 요청 URI가 클래스 내부의 모든 요청 핸들러 메소드 매핑URI에 접두사로 추가된다.
		- 하나 이상의 URI를 지정할 수 있다.
		  @RequestMapping(value={"/", "/home.do", "/main.do"})
		- 주요 속성
			value 또는 path
				매핑 URI를 지정한다.
				@RequestMapping(value=문자열 또는 문자열 배열)
				value값이 하나의 문자열일 때는 @RequestMapping(문자열) 형태로 사용할 수 있다. (둘 이상일 시 value= 작성 필요)
			method
				요청 방식(GET, POST)을 지정한다.
				method=RequestMethod.GET
				method=RequestMethod.POST
				그 외 PUT, DELETE도 있다.
				@RequestMapping(value=문자열, method=RequestMethod.GET)
					GET 방식의 value URI 요청에 매핑된다.
				@RequestMapping(value=문자열, method=RequestMethod.POST)
					POST 방식의 value URI 요청에 매핑된다.
				@getMapping(문자열), @postMapping(문자열) 등의 형태로 축약해 사용할 수도 있다.
			consumes
				매핑된 요청의 소비 가능한 미디어 타입을 지정한다.
				consumes="application/json"
				클라이언트가 서버로 보내는 컨텐츠 타입이 JSON 형식의 값일 때 매핑된다.
			produces
				매핑된 요청의 생성 가능한 응답 미디어 타입을 지정한다.
				produces="application/json"
				서버가 클라이언트로 보내는 컨텐츠 타입이 JSON 형식의 값이고 클라이언트 측에서 기대되는 응답 컨텐츠 타입을 JSON이라고 지정한 경우 매핑된다.
	@RequestParam
		- 요청파라미터값을 매개변수와 매핑시키는 어노테이션이다.
		- 메소드의 매개변수 선언부 () 안, 해당되는 매개변수 앞에 부착한다.
		- HandlerAdapter가 요청 핸들러 메소드의 @RequestParam과 매개변수를 분석해서 적절한 요청파라미터 값을 찾고 매개변수에 전달한다. 
		- 주요 속성
			value 또는 name
				요청 파라미터의 이름을 지정한다.
				value="userId"
				handlerMethod(@RequestParam(value="userId") String id)
				handlerMethod(@RequestParam(name="userId") String id)
				handlerMethod(@RequestParam("userId") String id)
					* 위 세 가지 모두 요청파라미터명이 userId인 요청파라미터의 값을 찾아서 매개변수 id에 전달한다.
				handlerMethod(String userId)
					* 핸들러 메소드의 변수명과 요청파라미터의 변수명이 같으면 @RequestParam을 생략해도 자동으로 적용된다.
					* 즉, 위의 선언은 handlerMethod(@RequestParam("userId") String userId)와 동일하다.
				handlerMethod(@RequestParam("skill" String[] skills)
					* <form /> 태그 안에 <input name="skill">이 여러 개인 경우, 체크된 혹은 입력된 값들을 배열로 받을 수 있다.
				*** 주의 사항) 반드시 지정한 이름의 요청파라미터값이 존재해야 한다.
			required
				필수 요청 파라미터 여부를 지정한다.
				기본값은 true로 지정되어 있다.
				required=false로 지정하지 않은 이상 무조건 요청파라미터가 존재해야 한다.
				required=false로 지정하는 경우, 거의 대부분 defaultValue와 함께 사용된다.
			defaultValue
				요청 파라미터 값이 비어있을 때 대신 사용될 기본값을 지정한다.
				required=false로 지정된 경우, defaultValue를 사용해 기본값을 지정할 수 있다.
				@RequestParam(name="pageNo", required=false, defaultValue="1") int pageNo
				@RequestParam(name="type", required=false, defaultValue="국내도서") String bookType
